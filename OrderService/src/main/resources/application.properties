server.port = 8083
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %5p - [RequestId: %X{requestId}] - %m%n
#Eureka configuration
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true
eureka.instance.upper-case-service-id=false
eureka.client.service-url.defaultZone=http://eureka-server.default.svc.cluster.local:8761/eureka/
spring.application.name=order-service
spring.datasource.url=jdbc:postgresql://postgres.default.svc.cluster.local:5432/orderDB
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=Prasanna@123
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
# Kafka Configuration
spring.kafka.bootstrap-servers=kafka-controller-0-external.default.svc.cluster.local:9092
spring.kafka.consumer.group-id=order-service-group
spring.kafka.consumer.auto-offset-reset=earliest
# Axon Configuration
axon.serialization.json.enabled=true
axon.kafka.producer.enabled=true
axon.axonserver.servers=axon-server.default.svc.cluster.local:8124
axon.axonserver.enabled=true
#Cors configuration
spring.webflux.cors.allowed-origins=http://localhost:8082
spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webflux.cors.allowed-headers=*
spring.webflux.cors.exposed-headers=*


#server.port=${SERVER_PORT:8083}
#
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#
#spring.application.name=order-service
#eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka}
#
#spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/orderDB}
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.username=${DB_USERNAME:postgres}
#spring.datasource.password=${DB_PASSWORD:Prasanna@123}
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#
## Kafka Configuration
#spring.kafka.bootstrap-servers=${KAFKA_BROKER:localhost:9092}
#spring.kafka.consumer.group-id=order-service-group
#spring.kafka.consumer.auto-offset-reset=earliest
#
## Axon Configuration
#axon.serialization.json.enabled=true
#axon.kafka.producer.enabled=true
#axon.axonserver.servers=${AXON_SERVER:localhost:8124}
#axon.axonserver.enabled=true
#
#eureka.instance.prefer-ip-address=true
#eureka.instance.upper-case-service-id=false
#
#spring.webflux.cors.allowed-origins=${API_GATEWAY_URL:http://localhost:8082}
#spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
#spring.webflux.cors.allowed-headers=*
#spring.webflux.cors.exposed-headers=*
